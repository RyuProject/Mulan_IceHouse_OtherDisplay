/*******************************************************************************
 * Size: 24 px
 * Bpp: 1
 * Opts: --bpp 1 --size 24 --font temp/font.ttf --symbols 陈醋沙棘杏脯苦荞黄花白酒鲜卑奶茶北魏末茶黄米凉糕+ --format lvgl -o main/lv_font_dishes_24.c
 ******************************************************************************/

#ifdef LV_LVGL_H_INCLUDE_SIMPLE
#include "lvgl.h"
#else
#include "lvgl.h"
#endif

/* Enable font cache for better performance */
#define LV_FONT_DISHES_24_USE_CACHE 1

#ifndef LV_FONT_DISHES_24
#define LV_FONT_DISHES_24 1
#endif

#if LV_FONT_DISHES_24

/*-----------------
 *    BITMAPS
 *----------------*/

/*Store the image of the glyphs*/
static LV_ATTRIBUTE_LARGE_CONST const uint8_t glyph_bitmap[] = {
    /* U+002B "+" */
    0xc, 0x1, 0x80, 0x30, 0x6, 0xf, 0xff, 0xff,
    0xc3, 0x0, 0x60, 0xc, 0x1, 0x80,

    /* U+51C9 "凉" */
    0x0, 0x0, 0x0, 0x80, 0x30, 0x6, 0x0, 0xc0,
    0xc, 0x7f, 0xfe, 0x39, 0xff, 0xf8, 0x60, 0x0,
    0x1, 0x80, 0x0, 0x0, 0x3f, 0xfc, 0x0, 0xff,
    0xf0, 0x3, 0x0, 0xc0, 0xc, 0x3, 0x0, 0x30,
    0xc, 0x0, 0xff, 0xf0, 0x63, 0xff, 0xc1, 0x80,
    0x60, 0x6, 0x19, 0x98, 0x30, 0xe6, 0x60, 0xc3,
    0x18, 0xc7, 0x18, 0x61, 0x98, 0xe1, 0x86, 0x63,
    0x3e, 0x0, 0x0, 0xf0, 0x0,

    /* U+5317 "北" */
    0x1, 0x86, 0x0, 0x6, 0x18, 0x0, 0x18, 0x60,
    0x0, 0x61, 0x82, 0x1, 0x86, 0x1d, 0xfe, 0x19,
    0xe7, 0xf8, 0x7e, 0x0, 0x61, 0xf0, 0x1, 0x87,
    0x0, 0x6, 0x18, 0x0, 0x18, 0x60, 0x0, 0x61,
    0x80, 0x1, 0x86, 0x0, 0x6, 0x18, 0x0, 0x78,
    0x60, 0x3, 0xe1, 0x83, 0x3d, 0x86, 0xd, 0xe6,
    0x18, 0x36, 0x18, 0x60, 0xc0, 0x61, 0xff, 0x1,
    0x83, 0xf8,

    /* U+5351 "卑" */
    0x0, 0x60, 0x0, 0x3, 0x80, 0x3, 0xff, 0xff,
    0xc, 0xc, 0xc, 0x30, 0x30, 0x30, 0xc0, 0xc0,
    0xc3, 0x3, 0x3, 0xf, 0xff, 0xfc, 0x30, 0x30,
    0x30, 0xc0, 0xc0, 0xc3, 0x6, 0x3, 0xf, 0xff,
    0xfc, 0x1, 0xc6, 0x0, 0xe, 0x18, 0x0, 0xf0,
    0x60, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x0,
    0x18, 0x0, 0x0, 0x60, 0x0, 0x1, 0x80, 0x0,
    0x6, 0x0,

    /* U+5976 "奶" */
    0x18, 0x0, 0x0, 0xc3, 0xff, 0x6, 0x1f, 0xf0,
    0x30, 0x30, 0x8f, 0xf1, 0x8c, 0x7f, 0x8c, 0x60,
    0xcc, 0x63, 0x6, 0x63, 0x18, 0x33, 0x18, 0xfb,
    0x18, 0xc7, 0xd9, 0x86, 0x6, 0xcc, 0x30, 0x36,
    0x61, 0x81, 0x9f, 0x18, 0xc, 0x70, 0xc0, 0x61,
    0xc6, 0x3, 0x1b, 0x70, 0x19, 0xcb, 0x0, 0x8c,
    0x38, 0xd, 0xc1, 0x83, 0xe4, 0xc, 0xe, 0x0,

    /* U+672B "末" */
    0x0, 0x30, 0x0, 0x0, 0x60, 0x0, 0x0, 0xc0,
    0x0, 0x1, 0x80, 0x7, 0xff, 0xff, 0xc0, 0x6,
    0x0, 0x0, 0xc, 0x0, 0x0, 0x18, 0x0, 0x3f,
    0xff, 0xf8, 0x7f, 0xff, 0xf0, 0x1, 0xf0, 0x0,
    0x7, 0xb0, 0x0, 0x1f, 0x70, 0x0, 0x76, 0x70,
    0x1, 0xcc, 0x70, 0x7, 0x18, 0x78, 0x1c, 0x30,
    0x7c, 0xf0, 0x60, 0x39, 0x80, 0xc0, 0x30, 0x1,
    0x80, 0x0, 0x3, 0x0, 0x0,

    /* U+674F "杏" */
    0x0, 0x18, 0x0, 0x0, 0x30, 0x0, 0x0, 0x60,
    0x3, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xc0, 0x1b,
    0xc0, 0x0, 0x76, 0xc0, 0x1, 0xcd, 0xc0, 0x7,
    0x19, 0xe0, 0x38, 0x30, 0xf1, 0xe0, 0x60, 0xfb,
    0x80, 0xc0, 0x60, 0x0, 0x0, 0x1, 0xff, 0xfc,
    0x3, 0xff, 0xf8, 0x6, 0x0, 0x30, 0xc, 0x0,
    0x60, 0x18, 0x0, 0xc0, 0x30, 0x1, 0x80, 0x7f,
    0xff, 0x0, 0xff, 0xfe, 0x1, 0x80, 0xc, 0x0,

    /* U+68D8 "棘" */
    0x6, 0x0, 0xc0, 0xc, 0x1, 0x81, 0xff, 0xbf,
    0xf0, 0x30, 0x6, 0x0, 0x60, 0xc, 0x0, 0xc0,
    0x18, 0x1f, 0xfb, 0xff, 0x33, 0x36, 0x66, 0x66,
    0x6c, 0xcc, 0xcc, 0xd9, 0x99, 0x99, 0xb3, 0x33,
    0x3e, 0x66, 0xe6, 0xe0, 0xdc, 0x1, 0xd0, 0x3c,
    0x7, 0xb0, 0xfc, 0x1b, 0x73, 0x6c, 0x76, 0x4c,
    0xdd, 0xcc, 0x39, 0x99, 0x18, 0x63, 0x10, 0x30,
    0x6, 0x0, 0x60, 0xc, 0x0,

    /* U+6C99 "沙" */
    0x20, 0x6, 0x1, 0xe0, 0x18, 0x1, 0xe0, 0x60,
    0x3, 0x11, 0x90, 0x0, 0x66, 0x60, 0x1, 0x99,
    0xc6, 0xc, 0x63, 0x1e, 0x31, 0x86, 0x19, 0x86,
    0x18, 0x26, 0x18, 0x70, 0x0, 0x60, 0x0, 0x1,
    0x88, 0x8, 0x6, 0x30, 0x30, 0x1, 0xc1, 0x80,
    0xe, 0x6, 0x0, 0x70, 0x30, 0x7, 0x81, 0xc0,
    0x38, 0x6, 0x7, 0xc0, 0x38, 0x7c, 0x0, 0xc3,
    0xc0, 0x0, 0x0, 0x0, 0x0,

    /* U+767D "白" */
    0x1, 0x80, 0x0, 0x60, 0x0, 0x38, 0x3, 0xff,
    0xff, 0xff, 0xff, 0xf0, 0x0, 0x3c, 0x0, 0xf,
    0x0, 0x3, 0xc0, 0x0, 0xf0, 0x0, 0x3f, 0xff,
    0xff, 0xff, 0xff, 0xc0, 0x0, 0xf0, 0x0, 0x3c,
    0x0, 0xf, 0x0, 0x3, 0xc0, 0x0, 0xff, 0xff,
    0xff, 0xff, 0xff, 0x0, 0x3, 0xc0, 0x0, 0xc0,

    /* U+7C73 "米" */
    0x0, 0x60, 0x0, 0x3, 0x2, 0xc, 0x18, 0x38,
    0x30, 0xc1, 0x81, 0xc6, 0x1c, 0x7, 0x31, 0xc0,
    0x11, 0x84, 0x0, 0xc, 0x0, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xc0, 0x7e, 0x0, 0x7, 0xd8, 0x0,
    0x36, 0x60, 0x3, 0xb3, 0x80, 0x39, 0x8e, 0x3,
    0x8c, 0x38, 0x78, 0x60, 0xf7, 0x83, 0x3, 0xf0,
    0x18, 0x4, 0x0, 0xc0, 0x0, 0x6, 0x0, 0x0,

    /* U+7CD5 "糕" */
    0xc, 0xc, 0x31, 0xb2, 0x18, 0xc6, 0xd8, 0x46,
    0xb, 0x6f, 0xff, 0x2d, 0x3f, 0xfc, 0xb4, 0x6,
    0x0, 0xc0, 0x18, 0x1f, 0xe0, 0x60, 0x7f, 0x9f,
    0xf8, 0x30, 0x7f, 0xe1, 0xc0, 0x18, 0x7, 0x0,
    0x60, 0x1e, 0x1, 0x80, 0xfc, 0xff, 0xf3, 0xdb,
    0xff, 0xdb, 0x40, 0x0, 0xcc, 0x20, 0x9, 0x30,
    0xd3, 0x60, 0xc6, 0x6c, 0xc3, 0x19, 0xb3, 0xc,
    0x46, 0x8c,

    /* U+812F "脯" */
    0x0, 0x0, 0x21, 0xfc, 0xc, 0xc6, 0x30, 0x33,
    0x18, 0xc0, 0xc0, 0x63, 0x7f, 0xfd, 0x8c, 0xc,
    0x7, 0xf0, 0x30, 0x1f, 0xdf, 0xfe, 0x63, 0x63,
    0x19, 0x8d, 0x8c, 0x66, 0x36, 0x31, 0x98, 0xdf,
    0xfe, 0x7f, 0x7f, 0xf9, 0x8d, 0x8c, 0x66, 0x36,
    0x31, 0x98, 0xd8, 0xc6, 0x63, 0x7f, 0xfb, 0x8d,
    0x8c, 0x6c, 0x36, 0x31, 0xb0, 0xd8, 0xc6, 0xc3,
    0x63, 0x1b, 0x39, 0x8d, 0xc0,

    /* U+82B1 "花" */
    0x6, 0x2, 0x0, 0x30, 0x10, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x60, 0x20, 0x3, 0x1, 0x0,
    0x0, 0x0, 0x0, 0x63, 0x0, 0x6, 0x18, 0x20,
    0x70, 0xc3, 0x83, 0x6, 0x78, 0x38, 0x37, 0x3,
    0xc1, 0xf0, 0x76, 0x1e, 0x3, 0x33, 0xe0, 0x1,
    0x9f, 0x0, 0xc, 0x18, 0x0, 0x60, 0xc0, 0x83,
    0x6, 0x6, 0x18, 0x30, 0x30, 0xc1, 0xff, 0x86,
    0xf, 0xf8,

    /* U+82E6 "苦" */
    0x3, 0x6, 0x0, 0x18, 0x30, 0x3f, 0xff, 0xfe,
    0x6, 0xc, 0x0, 0x30, 0x60, 0x1, 0xb3, 0x0,
    0x1, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8,
    0x3, 0x0, 0x0, 0x18, 0x0, 0x0, 0xc0, 0x1,
    0xff, 0xfc, 0xf, 0xff, 0xe0, 0x60, 0x3, 0x3,
    0x0, 0x18, 0x18, 0x0, 0xc0, 0xc0, 0x6, 0x7,
    0xff, 0xf0, 0x3f, 0xff, 0x81, 0x80, 0xc, 0x0,

    /* U+8336 "茶" */
    0x6, 0x3, 0x0, 0x30, 0x18, 0x3f, 0xff, 0xff,
    0xff, 0xff, 0xf0, 0x60, 0x30, 0x3, 0x1d, 0x80,
    0x3, 0xe0, 0x0, 0x7b, 0xc0, 0xf, 0x7, 0x81,
    0xe1, 0x9f, 0xbc, 0xc, 0x1f, 0x80, 0x60, 0x23,
    0xff, 0xfe, 0x1f, 0xff, 0xf0, 0x0, 0xc0, 0x1,
    0x86, 0x20, 0x1c, 0x31, 0xc1, 0xc1, 0x87, 0x1c,
    0xc, 0x1d, 0xc0, 0xe0, 0x74, 0x1e, 0x2, 0x0,
    0xf0, 0x0,

    /* U+835E "荞" */
    0x3, 0x2, 0x0, 0x18, 0x10, 0x3f, 0xff, 0xfe,
    0x6, 0x4, 0x0, 0x30, 0x20, 0x0, 0x0, 0xc0,
    0x1, 0xff, 0x7, 0xff, 0xc0, 0x0, 0x60, 0x0,
    0x6, 0x0, 0x1f, 0xff, 0xfe, 0x7, 0x1c, 0x0,
    0x70, 0x78, 0x1e, 0x0, 0xf3, 0xec, 0x1b, 0xe8,
    0x60, 0xc2, 0x3, 0x6, 0x0, 0x38, 0x30, 0x3,
    0x81, 0x80, 0x78, 0xc, 0x1, 0x0, 0x60, 0x0,

    /* U+9152 "酒" */
    0x0, 0x0, 0x1, 0xcf, 0xff, 0xf3, 0x81, 0x98,
    0x6, 0x6, 0x60, 0x0, 0x19, 0x80, 0x7, 0xff,
    0xe6, 0x19, 0x99, 0x9c, 0x66, 0x66, 0x39, 0x99,
    0x98, 0x46, 0x66, 0x60, 0x19, 0x99, 0x80, 0x6c,
    0x7e, 0x11, 0xf1, 0xf8, 0x66, 0x80, 0x61, 0x98,
    0x1, 0x8c, 0x7f, 0xfe, 0x31, 0x80, 0x18, 0xc6,
    0x0, 0x66, 0x18, 0x1, 0x98, 0x7f, 0xfe, 0x41,
    0x80, 0x18,

    /* U+918B "醋" */
    0x0, 0xc, 0x60, 0x0, 0x31, 0x8f, 0xfc, 0xc6,
    0x5, 0x8f, 0xfe, 0x16, 0x3f, 0xfb, 0xfe, 0x31,
    0x8d, 0x68, 0xc6, 0x35, 0xa3, 0x18, 0xd6, 0xbf,
    0xff, 0x5a, 0xff, 0xfd, 0x68, 0x0, 0x35, 0xa0,
    0x0, 0xf3, 0x9f, 0xfb, 0x82, 0x60, 0x6c, 0x9,
    0x81, 0xb0, 0x27, 0xfe, 0xff, 0x9f, 0xfb, 0x2,
    0x60, 0x6c, 0x9, 0x81, 0xb0, 0x27, 0xfe, 0xff,
    0x9f, 0xfb, 0x2, 0x60, 0x60,

    /* U+9648 "陈" */
    0x0, 0x6, 0x7, 0xf0, 0x60, 0x31, 0x83, 0x1,
    0x8d, 0xff, 0xec, 0xc1, 0x80, 0x66, 0xc, 0x3,
    0x20, 0xcc, 0x1b, 0x6, 0x60, 0xd8, 0x73, 0x6,
    0x63, 0x18, 0x31, 0x38, 0xc1, 0x8d, 0xff, 0xec,
    0x60, 0x30, 0x63, 0x1, 0x83, 0x18, 0xcd, 0x9b,
    0xce, 0x6c, 0xdc, 0x63, 0x36, 0x6, 0x18, 0xf0,
    0x60, 0xc7, 0x80, 0x3e, 0xc, 0x0, 0xf0, 0x0,

    /* U+9B4F "魏" */
    0x1, 0x7, 0x3, 0xfe, 0x18, 0x4, 0xc3, 0xff,
    0x3, 0xc, 0xcc, 0xff, 0xb3, 0x33, 0xfe, 0xcc,
    0xc1, 0xd3, 0xff, 0xf, 0xec, 0xcc, 0x6d, 0xb3,
    0x33, 0x30, 0xcc, 0xc0, 0xc3, 0xff, 0x6, 0x0,
    0xe0, 0xff, 0x86, 0xb0, 0xc6, 0x1a, 0xe6, 0x30,
    0x6a, 0x9c, 0xc3, 0xbf, 0x3f, 0xc, 0xbc, 0x38,
    0x62, 0x0, 0xf3, 0x88, 0xce, 0x5c, 0x23, 0xe0,
    0x60, 0xf8,

    /* U+9C9C "鲜" */
    0x8, 0x2, 0x18, 0x60, 0x18, 0xc1, 0xfc, 0x33,
    0xc, 0x60, 0x18, 0x71, 0x8f, 0xfd, 0x8c, 0x3f,
    0xff, 0xfe, 0xc, 0xd, 0x98, 0x30, 0x36, 0x60,
    0xc0, 0xd9, 0xbf, 0xf3, 0xfe, 0xff, 0xcd, 0x98,
    0x30, 0x36, 0x60, 0xc0, 0xd9, 0x83, 0x3, 0xfe,
    0xff, 0xcf, 0xfb, 0xff, 0x0, 0x0, 0xc0, 0x7,
    0x83, 0x7, 0xfc, 0xc, 0x1f, 0x0, 0x30, 0x0,
    0x0, 0xc0,

    /* U+9EC4 "黄" */
    0x3, 0x3, 0x0, 0xc, 0xc, 0x7, 0xff, 0xff,
    0x80, 0xc0, 0xc0, 0x3, 0x3, 0x0, 0xc, 0xc,
    0xf, 0xff, 0xff, 0xc0, 0xc, 0x0, 0x0, 0x30,
    0x0, 0x7f, 0xff, 0x81, 0x83, 0x6, 0x6, 0xc,
    0x18, 0x1f, 0xff, 0xe0, 0x60, 0xc1, 0x81, 0x83,
    0x6, 0x6, 0xc, 0x18, 0x1f, 0xff, 0xe0, 0x0,
    0x8, 0x0, 0xf0, 0x3f, 0x3f, 0x80, 0x3e, 0x60,
    0x0, 0x8
};


/*---------------------
 *  GLYPH DESCRIPTION
 *--------------------*/

static const lv_font_fmt_txt_glyph_dsc_t glyph_dsc[] = {
    {.bitmap_index = 0, .adv_w = 0, .box_w = 0, .box_h = 0, .ofs_x = 0, .ofs_y = 0} /* id = 0 reserved */,
    {.bitmap_index = 0, .adv_w = 212, .box_w = 11, .box_h = 10, .ofs_x = 1, .ofs_y = 3},
    {.bitmap_index = 14, .adv_w = 384, .box_w = 22, .box_h = 22, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 75, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 133, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 191, .adv_w = 384, .box_w = 21, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 247, .adv_w = 384, .box_w = 23, .box_h = 21, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 308, .adv_w = 384, .box_w = 23, .box_h = 22, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 372, .adv_w = 384, .box_w = 23, .box_h = 21, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 433, .adv_w = 384, .box_w = 22, .box_h = 22, .ofs_x = 1, .ofs_y = -3},
    {.bitmap_index = 494, .adv_w = 384, .box_w = 18, .box_h = 21, .ofs_x = 3, .ofs_y = -2},
    {.bitmap_index = 542, .adv_w = 384, .box_w = 21, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 598, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 0, .ofs_y = -2},
    {.bitmap_index = 656, .adv_w = 384, .box_w = 22, .box_h = 22, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 717, .adv_w = 384, .box_w = 21, .box_h = 22, .ofs_x = 2, .ofs_y = -2},
    {.bitmap_index = 775, .adv_w = 384, .box_w = 21, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 831, .adv_w = 384, .box_w = 21, .box_h = 22, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 889, .adv_w = 384, .box_w = 21, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 945, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 1003, .adv_w = 384, .box_w = 22, .box_h = 22, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 1064, .adv_w = 384, .box_w = 21, .box_h = 21, .ofs_x = 2, .ofs_y = -2},
    {.bitmap_index = 1120, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 1178, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 1, .ofs_y = -2},
    {.bitmap_index = 1236, .adv_w = 384, .box_w = 22, .box_h = 21, .ofs_x = 1, .ofs_y = -2}
};

/*---------------------
 *  CHARACTER MAPPING
 *--------------------*/

static const uint16_t unicode_list_0[] = {
    0x0, 0x519e, 0x52ec, 0x5326, 0x594b, 0x6700, 0x6724, 0x68ad,
    0x6c6e, 0x7652, 0x7c48, 0x7caa, 0x8104, 0x8286, 0x82bb, 0x830b,
    0x8333, 0x9127, 0x9160, 0x961d, 0x9b24, 0x9c71, 0x9e99
};

/*Collect the unicode lists and glyph_id offsets*/
static const lv_font_fmt_txt_cmap_t cmaps[] =
{
    {
        .range_start = 43, .range_length = 40602, .glyph_id_start = 1,
        .unicode_list = unicode_list_0, .glyph_id_ofs_list = NULL, .list_length = 23, .type = LV_FONT_FMT_TXT_CMAP_SPARSE_TINY
    }
};



/*--------------------
 *  ALL CUSTOM DATA
 *--------------------*/

#if LVGL_VERSION_MAJOR == 8
/*Store all the custom data of the font*/
static  lv_font_fmt_txt_glyph_cache_t cache;
#endif

#if LVGL_VERSION_MAJOR >= 8
static const lv_font_fmt_txt_dsc_t font_dsc = {
#else
static lv_font_fmt_txt_dsc_t font_dsc = {
#endif
    .glyph_bitmap = glyph_bitmap,
    .glyph_dsc = glyph_dsc,
    .cmaps = cmaps,
    .kern_dsc = NULL,
    .kern_scale = 0,
    .cmap_num = 1,
    .bpp = 1,
    .kern_classes = 0,
    .bitmap_format = 0,
#if LVGL_VERSION_MAJOR == 8
    .cache = &cache
#endif
};



/*-----------------
 *  PUBLIC FONT
 *----------------*/

/*Initialize a public general font descriptor*/
#if LVGL_VERSION_MAJOR >= 8
const lv_font_t lv_font_dishes_24 = {
#else
lv_font_t lv_font_dishes_24 = {
#endif
    .get_glyph_dsc = lv_font_get_glyph_dsc_fmt_txt,    /*Function pointer to get glyph's data*/
    .get_glyph_bitmap = lv_font_get_bitmap_fmt_txt,    /*Function pointer to get glyph's bitmap*/
    .line_height = 23,          /*The maximum line height required by the font*/
    .base_line = 3,             /*Baseline measured from the bottom of the line*/
#if !(LVGL_VERSION_MAJOR == 6 && LVGL_VERSION_MINOR == 0)
    .subpx = LV_FONT_SUBPX_NONE,
#endif
#if LV_VERSION_CHECK(7, 4, 0) || LVGL_VERSION_MAJOR >= 8
    .underline_position = -3,
    .underline_thickness = 1,
#endif
    .dsc = &font_dsc,          /*The custom font data. Will be accessed by `get_glyph_bitmap/dsc` */
#if LV_VERSION_CHECK(8, 2, 0) || LVGL_VERSION_MAJOR >= 9
    .fallback = NULL,
#endif
    .user_data = NULL,
};



#endif /*#if LV_FONT_DISHES_24*/

